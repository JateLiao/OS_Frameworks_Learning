<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lsj.os_frameworks_learning.os_frameworks.mybatis.dao.OssBucketDoMapper">
  <resultMap id="BaseResultMap" type="com.lsj.os_frameworks_learning.os_frameworks.mybatis.model.OssBucketDo">
    <id column="seq_id" jdbcType="INTEGER" property="seqId" />
    <result column="purpose_key" jdbcType="VARCHAR" property="purposeKey" />
    <result column="provider_id" jdbcType="TINYINT" property="providerId" />
    <result column="bucket_name" jdbcType="VARCHAR" property="bucketName" />
    <result column="bucket_domain" jdbcType="VARCHAR" property="bucketDomain" />
    <result column="bucket_domain_protocol" jdbcType="VARCHAR" property="bucketDomainProtocol" />
    <result column="bucket_prefix_path" jdbcType="VARCHAR" property="bucketPrefixPath" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="private_flag" jdbcType="TINYINT" property="privateFlag" />
    <result column="expire_time" jdbcType="INTEGER" property="expireTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    seq_id, purpose_key, provider_id, bucket_name, bucket_domain, bucket_domain_protocol, 
    bucket_prefix_path, remark, private_flag, expire_time, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.lsj.os_frameworks_learning.os_frameworks.mybatis.model.OssBucketDoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tab_oss_bucket
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tab_oss_bucket
    where seq_id = #{seqId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tab_oss_bucket
    where seq_id = #{seqId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lsj.os_frameworks_learning.os_frameworks.mybatis.model.OssBucketDoExample">
    delete from tab_oss_bucket
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lsj.os_frameworks_learning.os_frameworks.mybatis.model.OssBucketDo">
    <selectKey keyProperty="seqId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tab_oss_bucket (purpose_key, provider_id, bucket_name, 
      bucket_domain, bucket_domain_protocol, bucket_prefix_path, 
      remark, private_flag, expire_time, 
      create_time, update_time)
    values (#{purposeKey,jdbcType=VARCHAR}, #{providerId,jdbcType=TINYINT}, #{bucketName,jdbcType=VARCHAR}, 
      #{bucketDomain,jdbcType=VARCHAR}, #{bucketDomainProtocol,jdbcType=VARCHAR}, #{bucketPrefixPath,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{privateFlag,jdbcType=TINYINT}, #{expireTime,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.lsj.os_frameworks_learning.os_frameworks.mybatis.model.OssBucketDo">
    <selectKey keyProperty="seqId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tab_oss_bucket
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="purposeKey != null">
        purpose_key,
      </if>
      <if test="providerId != null">
        provider_id,
      </if>
      <if test="bucketName != null">
        bucket_name,
      </if>
      <if test="bucketDomain != null">
        bucket_domain,
      </if>
      <if test="bucketDomainProtocol != null">
        bucket_domain_protocol,
      </if>
      <if test="bucketPrefixPath != null">
        bucket_prefix_path,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="privateFlag != null">
        private_flag,
      </if>
      <if test="expireTime != null">
        expire_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="purposeKey != null">
        #{purposeKey,jdbcType=VARCHAR},
      </if>
      <if test="providerId != null">
        #{providerId,jdbcType=TINYINT},
      </if>
      <if test="bucketName != null">
        #{bucketName,jdbcType=VARCHAR},
      </if>
      <if test="bucketDomain != null">
        #{bucketDomain,jdbcType=VARCHAR},
      </if>
      <if test="bucketDomainProtocol != null">
        #{bucketDomainProtocol,jdbcType=VARCHAR},
      </if>
      <if test="bucketPrefixPath != null">
        #{bucketPrefixPath,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="privateFlag != null">
        #{privateFlag,jdbcType=TINYINT},
      </if>
      <if test="expireTime != null">
        #{expireTime,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lsj.os_frameworks_learning.os_frameworks.mybatis.model.OssBucketDoExample" resultType="java.lang.Long">
    select count(*) from tab_oss_bucket
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tab_oss_bucket
    <set>
      <if test="record.seqId != null">
        seq_id = #{record.seqId,jdbcType=INTEGER},
      </if>
      <if test="record.purposeKey != null">
        purpose_key = #{record.purposeKey,jdbcType=VARCHAR},
      </if>
      <if test="record.providerId != null">
        provider_id = #{record.providerId,jdbcType=TINYINT},
      </if>
      <if test="record.bucketName != null">
        bucket_name = #{record.bucketName,jdbcType=VARCHAR},
      </if>
      <if test="record.bucketDomain != null">
        bucket_domain = #{record.bucketDomain,jdbcType=VARCHAR},
      </if>
      <if test="record.bucketDomainProtocol != null">
        bucket_domain_protocol = #{record.bucketDomainProtocol,jdbcType=VARCHAR},
      </if>
      <if test="record.bucketPrefixPath != null">
        bucket_prefix_path = #{record.bucketPrefixPath,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.privateFlag != null">
        private_flag = #{record.privateFlag,jdbcType=TINYINT},
      </if>
      <if test="record.expireTime != null">
        expire_time = #{record.expireTime,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tab_oss_bucket
    set seq_id = #{record.seqId,jdbcType=INTEGER},
      purpose_key = #{record.purposeKey,jdbcType=VARCHAR},
      provider_id = #{record.providerId,jdbcType=TINYINT},
      bucket_name = #{record.bucketName,jdbcType=VARCHAR},
      bucket_domain = #{record.bucketDomain,jdbcType=VARCHAR},
      bucket_domain_protocol = #{record.bucketDomainProtocol,jdbcType=VARCHAR},
      bucket_prefix_path = #{record.bucketPrefixPath,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      private_flag = #{record.privateFlag,jdbcType=TINYINT},
      expire_time = #{record.expireTime,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lsj.os_frameworks_learning.os_frameworks.mybatis.model.OssBucketDo">
    update tab_oss_bucket
    <set>
      <if test="purposeKey != null">
        purpose_key = #{purposeKey,jdbcType=VARCHAR},
      </if>
      <if test="providerId != null">
        provider_id = #{providerId,jdbcType=TINYINT},
      </if>
      <if test="bucketName != null">
        bucket_name = #{bucketName,jdbcType=VARCHAR},
      </if>
      <if test="bucketDomain != null">
        bucket_domain = #{bucketDomain,jdbcType=VARCHAR},
      </if>
      <if test="bucketDomainProtocol != null">
        bucket_domain_protocol = #{bucketDomainProtocol,jdbcType=VARCHAR},
      </if>
      <if test="bucketPrefixPath != null">
        bucket_prefix_path = #{bucketPrefixPath,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="privateFlag != null">
        private_flag = #{privateFlag,jdbcType=TINYINT},
      </if>
      <if test="expireTime != null">
        expire_time = #{expireTime,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where seq_id = #{seqId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lsj.os_frameworks_learning.os_frameworks.mybatis.model.OssBucketDo">
    update tab_oss_bucket
    set purpose_key = #{purposeKey,jdbcType=VARCHAR},
      provider_id = #{providerId,jdbcType=TINYINT},
      bucket_name = #{bucketName,jdbcType=VARCHAR},
      bucket_domain = #{bucketDomain,jdbcType=VARCHAR},
      bucket_domain_protocol = #{bucketDomainProtocol,jdbcType=VARCHAR},
      bucket_prefix_path = #{bucketPrefixPath,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      private_flag = #{privateFlag,jdbcType=TINYINT},
      expire_time = #{expireTime,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where seq_id = #{seqId,jdbcType=INTEGER}
  </update>
</mapper>