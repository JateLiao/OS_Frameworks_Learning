<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lsj.os_frameworks_learning.os_frameworks.mybatis.dao.OssbucketMapper">
  <resultMap id="BaseResultMap" type="com.lsj.os_frameworks_learning.os_frameworks.mybatis.model.Ossbucket">
    <id column="seq_id" jdbcType="INTEGER" property="seqId" />
    <result column="purpose_key" jdbcType="VARCHAR" property="purposeKey" />
    <result column="provider_id" jdbcType="TINYINT" property="providerId" />
    <result column="bucket_name" jdbcType="VARCHAR" property="bucketName" />
    <result column="bucket_domain" jdbcType="VARCHAR" property="bucketDomain" />
    <result column="bucket_domain_protocol" jdbcType="VARCHAR" property="bucketDomainProtocol" />
    <result column="bucket_prefix_path" jdbcType="VARCHAR" property="bucketPrefixPath" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="private_flag" jdbcType="TINYINT" property="privateFlag" />
    <result column="expire_time" jdbcType="INTEGER" property="expireTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    `seq_id`, `purpose_key`, `provider_id`, `bucket_name`, `bucket_domain`, `bucket_domain_protocol`, 
    `bucket_prefix_path`, `remark`, `private_flag`, `expire_time`, `create_time`, `update_time`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `tab_oss_bucket`
    where `seq_id` = #{seqId,jdbcType=INTEGER}
  </select>
  <insert id="insert" parameterType="com.lsj.os_frameworks_learning.os_frameworks.mybatis.model.Ossbucket">
    insert into `tab_oss_bucket` (`seq_id`, `purpose_key`, `provider_id`, 
      `bucket_name`, `bucket_domain`, `bucket_domain_protocol`, 
      `bucket_prefix_path`, `remark`, `private_flag`, 
      `expire_time`)
    values (#{seqId,jdbcType=INTEGER}, #{purposeKey,jdbcType=VARCHAR}, #{providerId,jdbcType=TINYINT}, 
      #{bucketName,jdbcType=VARCHAR}, #{bucketDomain,jdbcType=VARCHAR}, #{bucketDomainProtocol,jdbcType=VARCHAR}, 
      #{bucketPrefixPath,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{privateFlag,jdbcType=TINYINT}, 
      #{expireTime,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lsj.os_frameworks_learning.os_frameworks.mybatis.model.Ossbucket">
    insert into `tab_oss_bucket`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="seqId != null">
        `seq_id`,
      </if>
      <if test="purposeKey != null">
        `purpose_key`,
      </if>
      <if test="providerId != null">
        `provider_id`,
      </if>
      <if test="bucketName != null">
        `bucket_name`,
      </if>
      <if test="bucketDomain != null">
        `bucket_domain`,
      </if>
      <if test="bucketDomainProtocol != null">
        `bucket_domain_protocol`,
      </if>
      <if test="bucketPrefixPath != null">
        `bucket_prefix_path`,
      </if>
      <if test="remark != null">
        `remark`,
      </if>
      <if test="privateFlag != null">
        `private_flag`,
      </if>
      <if test="expireTime != null">
        `expire_time`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="seqId != null">
        #{seqId,jdbcType=INTEGER},
      </if>
      <if test="purposeKey != null">
        #{purposeKey,jdbcType=VARCHAR},
      </if>
      <if test="providerId != null">
        #{providerId,jdbcType=TINYINT},
      </if>
      <if test="bucketName != null">
        #{bucketName,jdbcType=VARCHAR},
      </if>
      <if test="bucketDomain != null">
        #{bucketDomain,jdbcType=VARCHAR},
      </if>
      <if test="bucketDomainProtocol != null">
        #{bucketDomainProtocol,jdbcType=VARCHAR},
      </if>
      <if test="bucketPrefixPath != null">
        #{bucketPrefixPath,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="privateFlag != null">
        #{privateFlag,jdbcType=TINYINT},
      </if>
      <if test="expireTime != null">
        #{expireTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lsj.os_frameworks_learning.os_frameworks.mybatis.model.Ossbucket">
    update `tab_oss_bucket`
    <set>
      <if test="purposeKey != null">
        `purpose_key` = #{purposeKey,jdbcType=VARCHAR},
      </if>
      <if test="providerId != null">
        `provider_id` = #{providerId,jdbcType=TINYINT},
      </if>
      <if test="bucketName != null">
        `bucket_name` = #{bucketName,jdbcType=VARCHAR},
      </if>
      <if test="bucketDomain != null">
        `bucket_domain` = #{bucketDomain,jdbcType=VARCHAR},
      </if>
      <if test="bucketDomainProtocol != null">
        `bucket_domain_protocol` = #{bucketDomainProtocol,jdbcType=VARCHAR},
      </if>
      <if test="bucketPrefixPath != null">
        `bucket_prefix_path` = #{bucketPrefixPath,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        `remark` = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="privateFlag != null">
        `private_flag` = #{privateFlag,jdbcType=TINYINT},
      </if>
      <if test="expireTime != null">
        `expire_time` = #{expireTime,jdbcType=INTEGER},
      </if>
    </set>
    where `seq_id` = #{seqId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lsj.os_frameworks_learning.os_frameworks.mybatis.model.Ossbucket">
    update `tab_oss_bucket`
    set `purpose_key` = #{purposeKey,jdbcType=VARCHAR},
      `provider_id` = #{providerId,jdbcType=TINYINT},
      `bucket_name` = #{bucketName,jdbcType=VARCHAR},
      `bucket_domain` = #{bucketDomain,jdbcType=VARCHAR},
      `bucket_domain_protocol` = #{bucketDomainProtocol,jdbcType=VARCHAR},
      `bucket_prefix_path` = #{bucketPrefixPath,jdbcType=VARCHAR},
      `remark` = #{remark,jdbcType=VARCHAR},
      `private_flag` = #{privateFlag,jdbcType=TINYINT},
      `expire_time` = #{expireTime,jdbcType=INTEGER}
    where `seq_id` = #{seqId,jdbcType=INTEGER}
  </update>
</mapper>