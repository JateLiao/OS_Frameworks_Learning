<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lsj.os_frameworks_learning.os_frameworks.mybatis.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.lsj.os_frameworks_learning.os_frameworks.mybatis.model.UserDo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="channel" jdbcType="VARCHAR" property="channel" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.lsj.os_frameworks_learning.os_frameworks.mybatis.model.UserDo">
    <result column="avatar_url" jdbcType="LONGVARCHAR" property="avatarUrl" />
  </resultMap>
  <sql id="Base_Column_List">
    `id`, `nickname`, `channel`, `create_time`, `update_time`
  </sql>
  <sql id="Blob_Column_List">
    `avatar_url`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from `tab_user`
    where `id` = #{id,jdbcType=INTEGER}
  </select>
  <insert id="insert" parameterType="com.lsj.os_frameworks_learning.os_frameworks.mybatis.model.UserDo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `tab_user` (`nickname`, `channel`, `avatar_url`
      )
    values (#{nickname,jdbcType=VARCHAR}, #{channel,jdbcType=VARCHAR}, #{avatarUrl,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lsj.os_frameworks_learning.os_frameworks.mybatis.model.UserDo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `tab_user`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="nickname != null">
        `nickname`,
      </if>
      <if test="channel != null">
        `channel`,
      </if>
      <if test="avatarUrl != null">
        `avatar_url`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="channel != null">
        #{channel,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null">
        #{avatarUrl,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lsj.os_frameworks_learning.os_frameworks.mybatis.model.UserDo">
    update `tab_user`
    <set>
      <if test="nickname != null">
        `nickname` = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="channel != null">
        `channel` = #{channel,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null">
        `avatar_url` = #{avatarUrl,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where `id` = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lsj.os_frameworks_learning.os_frameworks.mybatis.model.UserDo">
    update `tab_user`
    set `nickname` = #{nickname,jdbcType=VARCHAR},
      `channel` = #{channel,jdbcType=VARCHAR},
      `avatar_url` = #{avatarUrl,jdbcType=LONGVARCHAR}
    where `id` = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lsj.os_frameworks_learning.os_frameworks.mybatis.model.UserDo">
    update `tab_user`
    set `nickname` = #{nickname,jdbcType=VARCHAR},
      `channel` = #{channel,jdbcType=VARCHAR}
    where `id` = #{id,jdbcType=INTEGER}
  </update>
</mapper>