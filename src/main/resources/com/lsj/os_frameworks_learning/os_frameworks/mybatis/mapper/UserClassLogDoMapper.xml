<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lsj.os_frameworks_learning.os_frameworks.mybatis.dao.UserClassLogDoMapper">
  <resultMap id="BaseResultMap" type="com.lsj.os_frameworks_learning.os_frameworks.mybatis.model.UserClassLogDo">
    <id column="seq_id" jdbcType="INTEGER" property="seqId" />
    <result column="user_class_id" jdbcType="INTEGER" property="userClassId" />
    <result column="unlock_type" jdbcType="TINYINT" property="unlockType" />
    <result column="unlock_status" jdbcType="TINYINT" property="unlockStatus" />
    <result column="action_type" jdbcType="TINYINT" property="actionType" />
    <result column="action_target_id" jdbcType="VARCHAR" property="actionTargetId" />
    <result column="action_remark" jdbcType="VARCHAR" property="actionRemark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    seq_id, user_class_id, unlock_type, unlock_status, action_type, action_target_id, 
    action_remark, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.lsj.os_frameworks_learning.os_frameworks.mybatis.model.UserClassLogDoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tab_user_class_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tab_user_class_log
    where seq_id = #{seqId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tab_user_class_log
    where seq_id = #{seqId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lsj.os_frameworks_learning.os_frameworks.mybatis.model.UserClassLogDoExample">
    delete from tab_user_class_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lsj.os_frameworks_learning.os_frameworks.mybatis.model.UserClassLogDo">
    <selectKey keyProperty="seqId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tab_user_class_log (user_class_id, unlock_type, unlock_status, 
      action_type, action_target_id, action_remark, 
      create_time, update_time)
    values (#{userClassId,jdbcType=INTEGER}, #{unlockType,jdbcType=TINYINT}, #{unlockStatus,jdbcType=TINYINT}, 
      #{actionType,jdbcType=TINYINT}, #{actionTargetId,jdbcType=VARCHAR}, #{actionRemark,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.lsj.os_frameworks_learning.os_frameworks.mybatis.model.UserClassLogDo">
    <selectKey keyProperty="seqId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tab_user_class_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userClassId != null">
        user_class_id,
      </if>
      <if test="unlockType != null">
        unlock_type,
      </if>
      <if test="unlockStatus != null">
        unlock_status,
      </if>
      <if test="actionType != null">
        action_type,
      </if>
      <if test="actionTargetId != null">
        action_target_id,
      </if>
      <if test="actionRemark != null">
        action_remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userClassId != null">
        #{userClassId,jdbcType=INTEGER},
      </if>
      <if test="unlockType != null">
        #{unlockType,jdbcType=TINYINT},
      </if>
      <if test="unlockStatus != null">
        #{unlockStatus,jdbcType=TINYINT},
      </if>
      <if test="actionType != null">
        #{actionType,jdbcType=TINYINT},
      </if>
      <if test="actionTargetId != null">
        #{actionTargetId,jdbcType=VARCHAR},
      </if>
      <if test="actionRemark != null">
        #{actionRemark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lsj.os_frameworks_learning.os_frameworks.mybatis.model.UserClassLogDoExample" resultType="java.lang.Long">
    select count(*) from tab_user_class_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tab_user_class_log
    <set>
      <if test="record.seqId != null">
        seq_id = #{record.seqId,jdbcType=INTEGER},
      </if>
      <if test="record.userClassId != null">
        user_class_id = #{record.userClassId,jdbcType=INTEGER},
      </if>
      <if test="record.unlockType != null">
        unlock_type = #{record.unlockType,jdbcType=TINYINT},
      </if>
      <if test="record.unlockStatus != null">
        unlock_status = #{record.unlockStatus,jdbcType=TINYINT},
      </if>
      <if test="record.actionType != null">
        action_type = #{record.actionType,jdbcType=TINYINT},
      </if>
      <if test="record.actionTargetId != null">
        action_target_id = #{record.actionTargetId,jdbcType=VARCHAR},
      </if>
      <if test="record.actionRemark != null">
        action_remark = #{record.actionRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tab_user_class_log
    set seq_id = #{record.seqId,jdbcType=INTEGER},
      user_class_id = #{record.userClassId,jdbcType=INTEGER},
      unlock_type = #{record.unlockType,jdbcType=TINYINT},
      unlock_status = #{record.unlockStatus,jdbcType=TINYINT},
      action_type = #{record.actionType,jdbcType=TINYINT},
      action_target_id = #{record.actionTargetId,jdbcType=VARCHAR},
      action_remark = #{record.actionRemark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lsj.os_frameworks_learning.os_frameworks.mybatis.model.UserClassLogDo">
    update tab_user_class_log
    <set>
      <if test="userClassId != null">
        user_class_id = #{userClassId,jdbcType=INTEGER},
      </if>
      <if test="unlockType != null">
        unlock_type = #{unlockType,jdbcType=TINYINT},
      </if>
      <if test="unlockStatus != null">
        unlock_status = #{unlockStatus,jdbcType=TINYINT},
      </if>
      <if test="actionType != null">
        action_type = #{actionType,jdbcType=TINYINT},
      </if>
      <if test="actionTargetId != null">
        action_target_id = #{actionTargetId,jdbcType=VARCHAR},
      </if>
      <if test="actionRemark != null">
        action_remark = #{actionRemark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where seq_id = #{seqId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lsj.os_frameworks_learning.os_frameworks.mybatis.model.UserClassLogDo">
    update tab_user_class_log
    set user_class_id = #{userClassId,jdbcType=INTEGER},
      unlock_type = #{unlockType,jdbcType=TINYINT},
      unlock_status = #{unlockStatus,jdbcType=TINYINT},
      action_type = #{actionType,jdbcType=TINYINT},
      action_target_id = #{actionTargetId,jdbcType=VARCHAR},
      action_remark = #{actionRemark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where seq_id = #{seqId,jdbcType=INTEGER}
  </update>
</mapper>